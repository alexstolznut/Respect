<!DOCTYPE html>

<html>
	<head>
		<title>GoalPeer</title>
		<!-- Import CSS -->
		<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css">
		<link type="text/css" rel="stylesheet" href="css/main.css">
		<link type="text/css" rel="stylesheet" href="css/login.css">

		<link type="text/css" rel="stylesheet" href="css/bootstrap.css">
		<link type="text/css" rel="stylesheet" href="css/main.css">

	</head>
	<style>

	
	body{
		background-color:#FFD95F;
	}
	
	#logincontainer{
		position:relative;
		width:800px;
		margin:0 auto;

	}

	#enter {
		margin-left: 10px;
		border: 1px solid black;
		border-radius: 10px;
		background-color: #FFD95F
	}
	</style>

	<body>

	<script src="//www.parsecdn.com/js/parse-1.3.5.min.js"></script>
		<script>
			Parse.initialize("ufYHrf2JuFW0nIXLncPeGeDdAXZa8BBZsZsyLEK5", "yJuhUErH2y33emEp9Ex63We8dstrRybbBraZyFt3");
			// console.log(Parse.User.current());
			if(Parse.User.current() != null)
				Parse.User.logOut();
			// console.log(Parse.User.current());
		</script>

	<div id="logincontainer">
			<section class="content">
				<h2 id="logintitle">GoalPeer Login</h2>
				<span class="input input--jiro">
					<!-- <form> -->
						<input class="input__field input__field--jiro" type="text" id="input-10" />
						<label class="input__label input__label--jiro" for="input-10">
							<span class="input__label-content input__label-content--jiro">email</span>
						</label>
					<!-- </form> -->
				</span>
			</section>
			<button id="enter" onclick="callThis()">Enter</button>

	</div>		





		<script src="js\jquery-1.11.0.js"></script>
		<script src="js\bootstrap.js"></script>
		<script src="//www.parsecdn.com/js/parse-1.3.5.min.js"></script>
		<script>
			function callThis() {
					// evt.preventDefault()
					Parse.initialize("ufYHrf2JuFW0nIXLncPeGeDdAXZa8BBZsZsyLEK5", "yJuhUErH2y33emEp9Ex63We8dstrRybbBraZyFt3");
					var user = new Parse.User();
					user.set("username", $(".input__field")[0].value);
					user.set("password", "password");
					user.set("email", $(".input__field")[0].value);
					user.signUp(null, {
						success: function(user) {
						    window.location.assign("/accomplishments");
						 },
						 error: function(error) {
						 	Parse.User.logIn($(".input__field")[0].value, "password", {
							  success: function(user) {
							    window.location.assign("/accomplishments");
							  },
							  error: function(user, error) {
							    // The login failed. Check error to see why.
							  }
							});
						 }
					});
			}

			(function() {
				// trim polyfill : https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/Trim
				if (!String.prototype.trim) {
					(function() {
						// Make sure we trim BOM and NBSP
						var rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;
						String.prototype.trim = function() {
							return this.replace(rtrim, '');
						};
					})();
				}

				[].slice.call( document.querySelectorAll( 'input.input__field' ) ).forEach( function( inputEl ) {
					// in case the input is already filled..
					if( inputEl.value.trim() !== '' ) {
						// classie.add( inputEl.parentNode, 'input--filled' );
					}

					// events:
					inputEl.addEventListener( 'focus', onInputFocus );
					inputEl.addEventListener( 'blur', onInputBlur );
				} );

				function onInputFocus( ev ) {
					// classie.add( ev.target.parentNode, 'input--filled' );
				}

				function onInputBlur( ev ) {
					if( ev.target.value.trim() === '' ) {
						// classie.remove( ev.target.parentNode, 'input--filled' );
					}
				}
			})();
		</script>
	</body>
</html>